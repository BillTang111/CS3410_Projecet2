#Main
	ADDIU $a0, $zero, 3		#n = 3 (n in a0)
	ADDIU $sp, $sp, 1000
	JAL fib
	NOP
	J exit

fib:	
#prologue
	ADDIU $sp, $sp, -32
	SW $ra, 28($sp) 	# save $ra
	SW $fp, 24($sp)		# save old $fp
	SW $a0, 20($sp)		# save n in called saved
	#a0-a4:0 to 12; fib_result to 16 
	ADDIU $fp, $sp, 28  	# set new frame ptr

#Body
# if (n==0)
	BNE $a0, $zero, case2
	NOP
	MOVZ $v0, $a0, $0    
	J epilogue				#return 0
	NOP

# if (n==1)
case2: 
	ADDIU $t6, $zero, 1		#t6 = 1
	BNE $a0, $t6, fib_recurse
	NOP
	MOVZ $v0, $a0, $0   
	J epilogue				#return 1	
	NOP

# loop
fib_recurse:
	#first function
	ADDIU $a0, $a0, -1		#n-1
	JAL fib			#recursion
	NOP
	LW $a0, 20($sp)		#restore n
	SW $v0, 16($sp)		#save result of fib(n-1)

	#second function
	ADDIU $a0, $a0, -2		#n-2
	JAL fib			#recursion
	NOP
	lW $t0, 16($sp)		#restore result of fib(n-1)
	ADDU $v0,$t0,$v0   		#calc result

epilogue:
	LW $fp, 24($sp)   		# restore fp
	LW $ra, 28($sp)		# restore ra
	ADDIU $sp, $sp, 32		#dealloc frame
	JR $ra
	NOP
exit:
